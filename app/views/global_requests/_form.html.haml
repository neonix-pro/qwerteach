#global-request
  = form_for @global_request do |f|
    - if @global_request.errors.any?
      .alert.alert-warning
        %i.fa.fa-warning.fa-2x
        = "Il y a eu #{pluralize(@global_request.errors.count, "erreur")}:"
        %ul
          - @global_request.errors.full_messages.each do |msg|
            %li= msg
            %br
    .form-group
      = hidden_field_tag :redirect, local_assigns[:redirect] if local_assigns[:redirect]
      = f.label :description, 'Aidez-nous à comprendre votre besoin'
      = f.text_area :description, required: true, class: "form-control character-count", data:{length:50}, rows: 5, placeholder: "Au plus vous serez détaillé dans votre demande, au mieux nous pourrons vous aider. Ex: Je cherche un professeur pour m'accompagner de façon régulière 2x semaine jusqu'au bac en juin."
      %span.text-grey#new-conversation Minimum 50 caractères.
    .row
      .col-sm-6
        .form-group
          = f.label :topic_id, 'Dans quelle matière ?'
          = f.select :topic_id, @topics.collect {|t| [ t.title, t.id ] }, {prompt: 'matière'}, {class: 'form-control topic-select', required: true}
      .col-sm-6
        .form-group
          = f.label :level_id, 'Pour quel niveau ?'
          = f.select :level_id, options_for_select(@levels.map{|l| [l.fr, l.id]}, @global_request.level.nil? ? nil: @global_request.level.id ), {prompt: 'niveau'}, {class: 'form-control level-select', required: true}
    .form-group
      = f.label :price_max, 'Tarif horaire'
      = f.select :price_max, options_for_select([['Tous les prix', nil], ['Maximum 15€/h', 15], ['Maximum 20€/h', 20], ['Maximum 25€/h', 25]], selected: nil), {}, {required: true, class: 'form-control'}
    .form-group
      = label_tag 'Numéro de téléphone'
      %br
      = phone_field_tag :user_number, nil, class:'form-control', required: true
      = hidden_field_tag :user_phone_country_code
      = hidden_field_tag :user_phone_number
      .text-white.text-center
        %small#phone_error_message Numéro invalide

    .actions
      = submit_tag 'Envoyer', class: 'btn btn-qw btn-green'

:javascript
  var r = new GlobalRequest( $('#global-request'));
  $('#global_request_description').characterCounter();

:javascript
  $("#phone_error_message").hide();
  $("#user_number").intlTelInput({
    formatOnInit: true,
    separateDialCode: true,
    nationalMode: false,
    initialCountry: 'auto',
    utilsScript: "assets/libphonenumber/utils.js",
    geoIpLookup: function(callback) {
        $.get("https://ipinfo.io", function() {}, "jsonp").always(function(resp) {
          var countryCode = (resp && resp.country) ? resp.country : "";
          callback(countryCode);
        });
      },
    preferredCountries: ['fr', 'be', 'ch', 'ca']
  });

  var telInput = $("#user_number");

  telInput.blur(function() {
    if ($.trim(telInput.val())) {
      if (telInput.intlTelInput("isValidNumber")) {
        $("#user_number").parent().removeClass("has-error");
        $("#phone_error_message").hide();
      } else {
        $("#user_number").parent().addClass("has-error");
        $("#phone_error_message").show();
      }
    }
  });

  telInput.focus(function(){
    telInput.parent().removeClass('has-error');
    $("#phone_error_message").hide();
  });

  $('#new_global_request').submit(function(e){
    var c = $('#user_number').intlTelInput("getSelectedCountryData").dialCode;
    var n =  $("#user_number").intlTelInput("getNumber").replace('+'+c, '');
    $('#user_phone_number').val(n);
    $('#user_phone_country_code').val(c);
    if(telInput.intlTelInput("isValidNumber")){

    }
    else{
      e.preventDefault();
    }
  });