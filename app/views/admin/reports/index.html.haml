- content_for(:title, 'Reports')

.card-header.bordered
  .header-block
    %h3.title= content_for(:title)
.card-block.filters
  = form_tag '', method: :get, class: 'form-inline form-filters' do
    .form-group.form-group__daterangepicker.mr-sm-2
      = text_field_tag :date_range, params[:date_range], class: 'form-control', 'data-behavior'=>'daterangepicker'
    .form-group.mr-sm-2
      - gradations = LessonsReport::GRADATIONS.keys
      = select_tag :gradation, options_for_select(gradations, params[:gradation].try(:to_sym) || gradations.first), class: 'form-control'
    .form-group
      = submit_tag nil, class: 'btn btn-primary'

.card-block
  .table-responsive
    %table.table.table-striped.table-hover
      %thead
        %tr
          %th{:class => "cell-label", :scope => "col"} Month
          %th{:class => "cell-label", :scope => "col"} All lessons
          %th{:class => "cell-label", :scope => "col"} Created lessons
          %th{:class => "cell-label", :scope => "col"} Expired lessons
          %th{:class => "cell-label", :scope => "col"} Sum(price) on created lessons
          %th{:class => "cell-label", :scope => "col"} Unpaid lessons
          %th{:class => "cell-label", :scope => "col"} Sum(price) unpaid lessons
          %th{:class => "cell-label", :scope => "col"} Students (#new)
          %th{:class => "cell-label", :scope => "col"} Teachers (#new)
      %tbody
        - @entities.each do |resource|
          %tr.js-table-row{:tabindex => "0"}
            %td.cell-data= resource.period
            %td.cell-data= resource.total_count
            %td.cell-data= resource.created_count
            %td.cell-data= resource.expired_count
            %td.cell-data= resource.created_amount
            %td.cell-data= resource.unpaid_count
            %td.cell-data= resource.unpaid_amount
            %td.cell-data #{resource.students_count} (#{resource.new_students_count})
            %td.cell-data #{resource.teachers_count} (#{resource.new_teachers_count})
  = paginate_admin @entities